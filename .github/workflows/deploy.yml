name: Deploy

on:
  push:
    branches: [ "main" ]

env:
  unit: bbgo

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go-version: [1.19.x]
        os: [linux]
        arch: [amd64]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build
      env:
        CGO_ENABLED: 0
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
      run: go build -o bbgo ./cmd/bbgo

    - uses: actions/upload-artifact@v3
      with:
        name: bbgo
        path: bbgo
        
  deploy:
    needs: build

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v3

    - uses: actions/download-artifact@v3
      with:
        name: bbgo

    - name: Stop and disable service
      continue-on-error: true
      run: |
        sudo systemctl stop ${{ env.unit }}
        sudo systemctl disable ${{ env.unit }}
        sudo systemctl reset-failed ${{ env.unit }}

    - name: Copy files
      run: |
        mkdir -p ${{ vars.WORKSPACE }}
        cp bbgo ${{ vars.WORKSPACE }}
        cp bbgo.yaml ${{ vars.WORKSPACE }}

    - name: Start service
      working-directory: ${{ vars.WORKSPACE }}
      run: |
        chmod +x bbgo
        sudo systemd-run \
          --unit=${{ env.unit }} \
          --same-dir \
          -p Restart=always \
          -E MAX_API_KEY=${{ secrets.MAX_API_KEY }} \
          -E MAX_API_SECRET=${{ secrets.MAX_API_SECRET }} \
          -E HOME=${{ vars.WORKSPACE }} \
          ./bbgo run
